name: Publish NuGet Package

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Mono
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: Install NuGet CLI
        run: |
          wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -O nuget.exe
          chmod +x ./nuget.exe

      - name: Generate Placeholder .dll
        run: |
          mkdir -p PlaceholderDll
          cd PlaceholderDll
          dotnet new classlib -n PlaceholderDll
          dotnet build PlaceholderDll/PlaceholderDll.csproj -o .
          cd ..

      - name: Prepare Files for NuGet Package
        run: |
          mkdir -p NuGetPackageContent
          cp -r BlueTeam-Tools NuGetPackageContent/ || true
          cp -r Core-ScriptLibrary NuGetPackageContent/ || true
          cp -r ITSM-Templates-SVR NuGetPackageContent/ || true
          cp -r ITSM-Templates-WKS NuGetPackageContent/ || true
          cp -r SysAdmin-Tools NuGetPackageContent/ || true
          find NuGetPackageContent/SysAdmin-Tools/GroupPolicyObjects-Templates -type f -exec rm -f {} \; || true
          cp LICENSE NuGetPackageContent/ || true
          cp README.md NuGetPackageContent/ || true
          cp PlaceholderDll/PlaceholderDll.dll NuGetPackageContent/lib/net7.0/ || true

      - name: Pack NuGet Package
        run: |
          mkdir -p ./artifacts
          mono ./nuget.exe pack nuget.package.nuspec -OutputDirectory ./artifacts
          ls ./artifacts

      - name: Publish to GitHub Packages
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mono ./nuget.exe push ./artifacts/*.nupkg -ApiKey ${{ secrets.GITHUB_TOKEN }} -Source "github"
