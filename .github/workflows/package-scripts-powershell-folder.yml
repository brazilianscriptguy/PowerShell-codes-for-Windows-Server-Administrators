name: Publish NuGet Package

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'

      - name: Generate Version
        id: generate_version
        run: |
          major=1
          minor=0
          build=$(date +'%Y%m%d')
          revision=$(date +'%H%M')
          version="$major.$minor.$build.$revision"
          echo "version=$version" >> $GITHUB_ENV
          echo "Generated version: $version"

      - name: Prepare Files
        run: |
          echo "Preparing Scripts-PowerShell directory..."
          mkdir -p Scripts-PowerShell
          cp LICENSE README.md Scripts-PowerShell/ || echo "Files missing: LICENSE or README.md"
          for dir in */ ; do
              dir=${dir%/}
              if [[ "$dir" != "Scripts-PowerShell" && "$dir" != ".github" ]]; then
                  mkdir -p Scripts-PowerShell/"$dir"
                  cp -r "$dir"/* Scripts-PowerShell/"$dir"/ || echo "Skipping $dir"
              fi
          done

      - name: Create Project File
        run: |
          cat > nuget.package.csproj <<- EOF
          <Project Sdk="Microsoft.NET.Sdk">
            <PropertyGroup>
              <TargetFramework>net7.0</TargetFramework>
              <PackageId>Scripts-PowerShell</PackageId>
              <Version>${{ env.version }}</Version>
              <Authors>Luiz Hamilton Silva</Authors>
              <Company>Brazilianscriptguy</Company>
              <Description>
                Comprehensive suite of PowerShell and VBScript tools automates Active Directory tasks.
              </Description>
              <PackageTags>PowerShell;Automation;SysAdmin;ActiveDirectory;Forensics</PackageTags>
              <RepositoryUrl>https://github.com/brazilianscriptguy/Windows-SysAdmin-ProSuite</RepositoryUrl>
              <NoWarn>NU5110;NU5111;NU5123</NoWarn>
              <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
            </PropertyGroup>
            <ItemGroup>
              <Content Include="Scripts-PowerShell/**" PackagePath="content/" />
            </ItemGroup>
          </Project>
          EOF

      - name: Restore Dependencies
        run: dotnet restore || echo "Skipping restore."

      - name: Build Project
        run: dotnet build nuget.package.csproj --configuration Release

      - name: Pack NuGet Package
        run: |
          mkdir -p ./artifacts
          dotnet pack nuget.package.csproj --configuration Release --output ./artifacts || exit 1
          echo "Checking artifacts directory..."
          ls ./artifacts
          package_file=$(find ./artifacts -name "Scripts-PowerShell*.nupkg")
          if [[ -z "$package_file" ]]; then
              echo "Error: Package not found in ./artifacts"
              exit 1
          fi
          echo "Package successfully created: $package_file"

      - name: Publish to GitHub Packages
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push ./artifacts/Scripts-PowerShell*.nupkg --api-key $NUGET_AUTH_TOKEN --source "github" --skip-duplicate
