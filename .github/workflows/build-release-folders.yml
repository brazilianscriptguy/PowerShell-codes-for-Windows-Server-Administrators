name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up PowerShell
        uses: actions/setup-powershell@v3
        with:
          pwsh-version: '7.5.1' # Or your preferred version

      - name: Build and package artifacts
        id: package
        run: |
          New-Item -ItemType Directory -Path PowerShellCodes
          Copy-Item -Path LICENSE -Destination PowerShellCodes\ -ErrorAction SilentlyContinue
          Copy-Item -Path README.md -Destination PowerShellCodes\ -ErrorAction SilentlyContinue

          Get-ChildItem -Directory | ForEach-Object {
            $subrepo = $_.Name
            if ($subrepo -ne 'PowerShellCodes' -and $subrepo -ne '.git') {
              Copy-Item -Path $_.FullName\* -Destination PowerShellCodes\$subrepo\ -Recurse -Force
            }
          }

          $sourceFile = 'Core-ScriptLibrary\Launch-Script-AutomaticMenu.ps1'
          if (Test-Path $sourceFile) {
            Copy-Item -Path $sourceFile -Destination PowerShellCodes\ -Force
          } else {
            Write-Error "File $sourceFile not found. Aborting workflow."
            exit 1
          }

          Compress-Archive -Path PowerShellCodes\* -DestinationPath Package-ProSuite.zip -Force

          echo "::set-output name=package_path::$(Resolve-Path Package-ProSuite.zip).Path"

      - name: Compute SHA256 hash
        id: compute_hash
        run: |
          $hash = Get-FileHash -Path ${{ steps.package.outputs.package_path }} -Algorithm SHA256 | Select-Object -ExpandProperty Hash
          echo "::set-output name=hash::$hash"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.package.outputs.package_path }}
          asset_name: Package-ProSuite.zip
          asset_content_type: application/zip

      - name: Update Release Notes with SHA256 Hash
        if: ${{ steps.compute_hash.outputs.hash != '' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const hash = '${{ steps.compute_hash.outputs.hash }}';
            const release = context.payload.release;
            const releaseId = release.id;
            const currentBody = release.body || '';
            const updatedBody = `${currentBody}\n\n**SHA256 Hash of Package-ProSuite.zip:** \`${hash}\``;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: updatedBody
            });
