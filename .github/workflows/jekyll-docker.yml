name: CI/CD Workflow for PowerShell Module

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install Dependencies and PowerShell
      - name: Install Dependencies and PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common zip
          wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell
          pwsh -Command 'Write-Host "PowerShell installed successfully."'

      # Locate the PowerShell Module File
      - name: Locate PowerShell Module
        id: locate-module
        run: |
          MODULE_FILE=$(find . -name "Windows-SysAdmin-ProSuite.psd1" | head -n 1)
          if [ -z "$MODULE_FILE" ]; then
            echo "Error: Windows-SysAdmin-ProSuite.psd1 not found in the repository!" && exit 1
          fi
          echo "Module file located at: $MODULE_FILE"
          echo "MODULE_FILE=$MODULE_FILE" >> $GITHUB_ENV

      # Validate PowerShell Module Manifest
      - name: Validate PowerShell Module Manifest
        shell: pwsh
        run: |
          try {
            Import-Module "$env:MODULE_FILE" -ErrorAction Stop
            Test-ModuleManifest -Path "$env:MODULE_FILE" -ErrorAction Stop
          } catch {
            Write-Error "Failed to import or validate the module manifest: $_"
            exit 1
          }
        env:
          MODULE_FILE: ${{ env.MODULE_FILE }}

      # Run Pester Tests
      - name: Run PowerShell Tests
        shell: pwsh
        run: |
          try {
            Invoke-Pester -Path ./Tests -Output Detailed
          } catch {
            Write-Error "Pester tests failed: $_"
            exit 1
          }

      # Package the PowerShell Module
      - name: Package PowerShell Module
        run: |
          MODULE_DIR=$(dirname "${{ env.MODULE_FILE }}")
          mkdir -p ./dist
          zip -r ./dist/Windows-SysAdmin-ProSuite.zip "$MODULE_DIR"/*
          echo "Packaging complete. Archive saved at ./dist/Windows-SysAdmin-ProSuite.zip."

      # Upload the Package as an Artifact
      - name: Upload PowerShell Module Package
        uses: actions/upload-artifact@v3
        with:
          name: Windows-SysAdmin-ProSuite
          path: ./dist/Windows-SysAdmin-ProSuite.zip
